/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FlowchartCreateNestedManyWithoutTopicsInput } from "./FlowchartCreateNestedManyWithoutTopicsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { NoteCreateNestedManyWithoutTopicsInput } from "./NoteCreateNestedManyWithoutTopicsInput";
import { UmlDiagramCreateNestedManyWithoutTopicsInput } from "./UmlDiagramCreateNestedManyWithoutTopicsInput";
import { UnitWhereUniqueInput } from "../../unit/base/UnitWhereUniqueInput";

@InputType()
class TopicCreateInput {
  @ApiProperty({
    required: false,
    type: () => FlowchartCreateNestedManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => FlowchartCreateNestedManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => FlowchartCreateNestedManyWithoutTopicsInput, {
    nullable: true,
  })
  flowcharts?: FlowchartCreateNestedManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => NoteCreateNestedManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => NoteCreateNestedManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => NoteCreateNestedManyWithoutTopicsInput, {
    nullable: true,
  })
  notes?: NoteCreateNestedManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: () => UmlDiagramCreateNestedManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => UmlDiagramCreateNestedManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => UmlDiagramCreateNestedManyWithoutTopicsInput, {
    nullable: true,
  })
  umlDiagrams?: UmlDiagramCreateNestedManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: () => UnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UnitWhereUniqueInput)
  @IsOptional()
  @Field(() => UnitWhereUniqueInput, {
    nullable: true,
  })
  unit?: UnitWhereUniqueInput | null;
}

export { TopicCreateInput as TopicCreateInput };
