/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FlowchartUpdateManyWithoutTopicsInput } from "./FlowchartUpdateManyWithoutTopicsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { NoteUpdateManyWithoutTopicsInput } from "./NoteUpdateManyWithoutTopicsInput";
import { UmlDiagramUpdateManyWithoutTopicsInput } from "./UmlDiagramUpdateManyWithoutTopicsInput";
import { UnitWhereUniqueInput } from "../../unit/base/UnitWhereUniqueInput";

@InputType()
class TopicUpdateInput {
  @ApiProperty({
    required: false,
    type: () => FlowchartUpdateManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => FlowchartUpdateManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => FlowchartUpdateManyWithoutTopicsInput, {
    nullable: true,
  })
  flowcharts?: FlowchartUpdateManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => NoteUpdateManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => NoteUpdateManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => NoteUpdateManyWithoutTopicsInput, {
    nullable: true,
  })
  notes?: NoteUpdateManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: () => UmlDiagramUpdateManyWithoutTopicsInput,
  })
  @ValidateNested()
  @Type(() => UmlDiagramUpdateManyWithoutTopicsInput)
  @IsOptional()
  @Field(() => UmlDiagramUpdateManyWithoutTopicsInput, {
    nullable: true,
  })
  umlDiagrams?: UmlDiagramUpdateManyWithoutTopicsInput;

  @ApiProperty({
    required: false,
    type: () => UnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UnitWhereUniqueInput)
  @IsOptional()
  @Field(() => UnitWhereUniqueInput, {
    nullable: true,
  })
  unit?: UnitWhereUniqueInput | null;
}

export { TopicUpdateInput as TopicUpdateInput };
